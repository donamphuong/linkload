Put your answers to each of the following questions in this file.
You can instead create a file answers.pdf (LaTeX is recommended) that contains your answers to the questions.
You should submit your answers.txt or answers.pdf file via CATe.


Question 1:
How big (how many bytes) is the program code section of the file hello.o?
Explain how you arrived at your answer, including any mathematical conversions you had to make.

Answer:
 
 
Question 2:
How many relocation records are there in the file hello.o? 
Name them and explain how you arrived at your answer.

Answer:
There is only one relocation record in the hello.o. This is because in the original file, there is only one label where the address is unknown. I have done this by comparing the original file hello.s, which is necessary because when examining the disassemble hello.o, I noticed two 0 addresses. 

Question 3:
How many relocation records are there in the file hello (the result of linking hello.o)?
Explain how you arrived at your answer. 

Answer:
There should be no relocation record left in the file hello. By using linker ld, all the relocation records in the program should be resolved. Looking at hello, I can see that the 3rd line mov $0x0,%ecx has changed to mov $0x40009a,%ecx

Question 4:
What happens if you try to link chello.o using ld as you did with hello.o 
(that is by running the command: ld -N chello.o -o chello)?
Explain what has happened and how the nm utility can be used to confirm this.

Answer:
When I tried to link chello.o using ld, the relocation record is not mapped to an address. I could confirm this by using nm chello.o, there are two more symbolsin chello.o, writeA and exitA, where message(the label) is inside them. This ledto writeA and exitA being relocated and message being ignored
 
Question 5:
The last instruction in hello.s is an exit system call. 
What would happen if you assembled, linked and ran this programs with this instruction commented out?
(Hint: you might want to try this)
Explain why this happens. Does the program still terminate?

Answer:
There is a segmentation fault and the program does not terminate. The program keeps looking for instruction in the memory that it shouldn't access leading to segmentation fault 
